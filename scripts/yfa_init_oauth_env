#!/usr/bin/env python

# This script is adapted from yahoo-fantasy-api
# Original source: https://github.com/spilchen/yahoo_fantasy_api
# PyPI Page: https://pypi.org/project/yahoo-fantasy-api/
# License: MIT
#
# The original copyright notice:
#
# MIT License
#
# Copyright (c) 2019 spilchen
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


"""Initialize OAuth environment for Yahoo! API access.

Sets up your environment with permissions to allow access to the Yahoo! APIs.
It does this by creating a JSON file that can be used for future API requests.

The consumer key/id can be omitted if the JSON file already exists.  In that
mode, this program will verify access with the JSON credentials.

Usage:
  yfa_init_oauth_env [-k <consumer_key>] [-s <consumer_secret>] <json>

  <json>  File to read/write the bearer token

Options:
  -h --help        Show this screen.
  -k, --key=id     The consumer key to use
  -s, --secret=id  The consumer secret to use
"""
from docopt import docopt
from yahoo_oauth import OAuth2
import os
import json


if __name__ == "__main__":
    args = docopt(__doc__, version="1.0")

    # If the JSON file does not exist, when we init it will redirect to a
    # web-page where you are asked to permit Fantasy Sports read access to this
    # application.  To prevent this from happening each time, we save off extra
    # state in a .json file.  This file is only written if using the
    # `from_file` option to OAuth2.  Setup this file with the minimal info
    # to allow this extra state to be saved.
    if not os.path.exists(args["<json>"]):
        if args["--key"] is None:
            raise RuntimeError(
                "Consumer key cannot be read from JSON file."
                "It must be specified on the command line."
            )
        if args["--secret"] is None:
            raise RuntimeError(
                "Consumer secret cannot be read from JSON file."
                "It must be specified on the command line."
            )
        creds = {}
        creds["consumer_key"] = args["--key"]
        creds["consumer_secret"] = args["--secret"]
        with open(args["<json>"], "w") as f:
            f.write(json.dumps(creds))
        print("Initialized {}".format(args["<json>"]))

    oauth = OAuth2(None, None, from_file=args["<json>"])
    if not oauth.token_is_valid():
        oauth.refresh_access_token()
